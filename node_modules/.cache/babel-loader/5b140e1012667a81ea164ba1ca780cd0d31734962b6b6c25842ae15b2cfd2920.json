{"ast":null,"code":"var _jsxFileName = \"/Users/sanjith/ingrediate1/src/CameraDetection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Camera, Upload } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraDetection = ({\n  onIngredientsDetected\n}) => {\n  _s();\n  const [processing, setProcessing] = useState(false);\n  const [debugInfo, setDebugInfo] = useState([]); // For debugging purposes\n  const fileInputRef = useRef(null);\n\n  // Known food ingredients with categories\n  const knownIngredients = {\n    fruits: new Set(['orange', 'apple', 'banana', 'lemon', 'lime', 'grape', 'strawberry', 'blueberry', 'raspberry', 'mango', 'pineapple', 'peach', 'pear', 'watermelon', 'kiwi', 'citrus fruit', 'citrus', 'fruit', 'mandarin', 'tangerine', 'clementine']),\n    vegetables: new Set(['tomato', 'onion', 'garlic', 'lettuce', 'carrot', 'potato', 'cucumber', 'bell pepper', 'broccoli', 'spinach', 'celery', 'mushroom', 'zucchini', 'vegetable']),\n    proteins: new Set(['chicken', 'beef', 'pork', 'fish', 'salmon', 'tuna', 'shrimp', 'egg', 'tofu', 'meat', 'protein']),\n    grains: new Set(['rice', 'pasta', 'bread', 'flour', 'oats', 'quinoa', 'noodles', 'grain', 'wheat'])\n  };\n\n  // Synonym mapping\n  const ingredientSynonyms = new Map([['orange', ['citrus', 'citrus fruit', 'mandarin', 'tangerine', 'clementine']], ['bell pepper', ['pepper', 'capsicum', 'sweet pepper']], ['green onion', ['scallion', 'spring onion']], ['potato', ['potatoes', 'spud']], ['tomato', ['tomatoes', 'cherry tomato']]]);\n  const findMatchingIngredient = label => {\n    label = label.toLowerCase();\n\n    // Check direct matches in all categories\n    for (const [category, ingredients] of Object.entries(knownIngredients)) {\n      if (ingredients.has(label)) {\n        return label;\n      }\n    }\n\n    // Check synonyms\n    for (const [main, synonyms] of ingredientSynonyms.entries()) {\n      if (synonyms.includes(label)) {\n        return main;\n      }\n    }\n    return null;\n  };\n  const analyzeImageWithGoogleVision = async imageFile => {\n    const apiKey = process.env.REACT_APP_GOOGLE_CLOUD_API_KEY;\n    if (!apiKey) {\n      throw new Error('Google Cloud API key not found');\n    }\n    try {\n      var _data$responses$0$lab, _data$responses$0$loc;\n      // Convert file to base64\n      const base64Image = await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          if (typeof reader.result === 'string') {\n            resolve(reader.result.split(',')[1]);\n          }\n        };\n        reader.onerror = reject;\n        reader.readAsDataURL(imageFile);\n      });\n      const requestBody = {\n        requests: [{\n          image: {\n            content: base64Image\n          },\n          features: [{\n            type: 'LABEL_DETECTION',\n            maxResults: 20\n          }, {\n            type: 'OBJECT_LOCALIZATION',\n            maxResults: 20\n          }]\n        }]\n      };\n      const response = await fetch(`https://vision.googleapis.com/v1/images:annotate?key=${apiKey}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        throw new Error(`Google Vision API Error: ${response.statusText}`);\n      }\n      const data = await response.json();\n      const detectedItems = new Set();\n      const debugLabels = []; // For debugging\n\n      // Process labels\n      (_data$responses$0$lab = data.responses[0].labelAnnotations) === null || _data$responses$0$lab === void 0 ? void 0 : _data$responses$0$lab.forEach(label => {\n        debugLabels.push(`Label: ${label.description} (${label.score})`);\n        const matchedIngredient = findMatchingIngredient(label.description);\n        if (matchedIngredient && label.score > 0.7) {\n          detectedItems.add(matchedIngredient);\n        }\n      });\n\n      // Process objects\n      (_data$responses$0$loc = data.responses[0].localizedObjectAnnotations) === null || _data$responses$0$loc === void 0 ? void 0 : _data$responses$0$loc.forEach(obj => {\n        debugLabels.push(`Object: ${obj.name} (${obj.score})`);\n        const matchedIngredient = findMatchingIngredient(obj.name);\n        if (matchedIngredient && obj.score > 0.7) {\n          detectedItems.add(matchedIngredient);\n        }\n      });\n\n      // Update debug info\n      setDebugInfo(debugLabels);\n      return Array.from(detectedItems);\n    } catch (error) {\n      console.error('Error analyzing image:', error);\n      throw error;\n    }\n  };\n  const handleFileUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setProcessing(true);\n    try {\n      const detectedIngredients = await analyzeImageWithGoogleVision(file);\n      console.log('Detected labels:', debugInfo); // For debugging\n      onIngredientsDetected(detectedIngredients);\n    } catch (error) {\n      console.error('Error processing image:', error);\n      alert('Error processing image. Please try again.');\n    } finally {\n      setProcessing(false);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: fileInputRef,\n      type: \"file\",\n      accept: \"image/*\",\n      capture: \"environment\",\n      onChange: handleFileUpload,\n      className: \"hidden\",\n      id: \"camera-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"camera-input\",\n        className: \"flex-1 flex items-center justify-center p-3 rounded-lg space-x-2 transition-all hover:scale-105 cursor-pointer\",\n        style: {\n          backgroundColor: '#B7B7A4'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Camera, {\n          className: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Take Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"camera-input\",\n        className: \"flex-1 flex items-center justify-center p-3 rounded-lg space-x-2 transition-all hover:scale-105 cursor-pointer\",\n        style: {\n          backgroundColor: '#B7B7A4'\n        },\n        onClick: () => {\n          if (fileInputRef.current) {\n            fileInputRef.current.removeAttribute('capture');\n            fileInputRef.current.click();\n            fileInputRef.current.setAttribute('capture', 'environment');\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Upload, {\n          className: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Upload Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), processing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex items-center justify-center space-x-2 p-4 rounded-lg\",\n      style: {\n        backgroundColor: '#FFE8D6'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-4 h-4 rounded-full bg-gray-600 animate-pulse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-4 h-4 rounded-full bg-gray-600 animate-pulse delay-100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-4 h-4 rounded-full bg-gray-600 animate-pulse delay-200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2 text-gray-800\",\n        children: \"Processing image...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this), debugInfo.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 text-sm bg-gray-100 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-bold mb-2\",\n        children: \"Debug Info:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), debugInfo.map((info, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: info\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraDetection, \"Jmd/8zaDZ8LdzO0uC8WmMkn1PDE=\");\n_c = CameraDetection;\nexport default CameraDetection;\nvar _c;\n$RefreshReg$(_c, \"CameraDetection\");","map":{"version":3,"names":["React","useState","useRef","Camera","Upload","jsxDEV","_jsxDEV","CameraDetection","onIngredientsDetected","_s","processing","setProcessing","debugInfo","setDebugInfo","fileInputRef","knownIngredients","fruits","Set","vegetables","proteins","grains","ingredientSynonyms","Map","findMatchingIngredient","label","toLowerCase","category","ingredients","Object","entries","has","main","synonyms","includes","analyzeImageWithGoogleVision","imageFile","apiKey","process","env","REACT_APP_GOOGLE_CLOUD_API_KEY","Error","_data$responses$0$lab","_data$responses$0$loc","base64Image","Promise","resolve","reject","reader","FileReader","onload","result","split","onerror","readAsDataURL","requestBody","requests","image","content","features","type","maxResults","response","fetch","method","headers","body","JSON","stringify","ok","statusText","data","json","detectedItems","debugLabels","responses","labelAnnotations","forEach","push","description","score","matchedIngredient","add","localizedObjectAnnotations","obj","name","Array","from","error","console","handleFileUpload","event","_event$target$files","file","target","files","detectedIngredients","log","alert","current","value","className","children","ref","accept","capture","onChange","id","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","style","backgroundColor","onClick","removeAttribute","click","setAttribute","length","map","info","index","_c","$RefreshReg$"],"sources":["/Users/sanjith/ingrediate1/src/CameraDetection.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Camera, Upload } from 'lucide-react';\n\ninterface CameraDetectionProps {\n  onIngredientsDetected: (ingredients: string[]) => void;\n}\n\ninterface VisionResponse {\n  labelAnnotations: Array<{\n    description: string;\n    score: number;\n    topicality: number;\n  }>;\n  localizedObjectAnnotations: Array<{\n    name: string;\n    score: number;\n  }>;\n}\n\nconst CameraDetection: React.FC<CameraDetectionProps> = ({ onIngredientsDetected }) => {\n  const [processing, setProcessing] = useState(false);\n  const [debugInfo, setDebugInfo] = useState<string[]>([]);  // For debugging purposes\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // Known food ingredients with categories\n  const knownIngredients = {\n    fruits: new Set([\n      'orange', 'apple', 'banana', 'lemon', 'lime', 'grape', 'strawberry',\n      'blueberry', 'raspberry', 'mango', 'pineapple', 'peach', 'pear',\n      'watermelon', 'kiwi', 'citrus fruit', 'citrus', 'fruit', 'mandarin',\n      'tangerine', 'clementine'\n    ]),\n    vegetables: new Set([\n      'tomato', 'onion', 'garlic', 'lettuce', 'carrot', 'potato', 'cucumber',\n      'bell pepper', 'broccoli', 'spinach', 'celery', 'mushroom', 'zucchini',\n      'vegetable'\n    ]),\n    proteins: new Set([\n      'chicken', 'beef', 'pork', 'fish', 'salmon', 'tuna', 'shrimp', 'egg',\n      'tofu', 'meat', 'protein'\n    ]),\n    grains: new Set([\n      'rice', 'pasta', 'bread', 'flour', 'oats', 'quinoa', 'noodles',\n      'grain', 'wheat'\n    ])\n  };\n\n  // Synonym mapping\n  const ingredientSynonyms = new Map([\n    ['orange', ['citrus', 'citrus fruit', 'mandarin', 'tangerine', 'clementine']],\n    ['bell pepper', ['pepper', 'capsicum', 'sweet pepper']],\n    ['green onion', ['scallion', 'spring onion']],\n    ['potato', ['potatoes', 'spud']],\n    ['tomato', ['tomatoes', 'cherry tomato']]\n  ]);\n\n  const findMatchingIngredient = (label: string): string | null => {\n    label = label.toLowerCase();\n\n    // Check direct matches in all categories\n    for (const [category, ingredients] of Object.entries(knownIngredients)) {\n      if (ingredients.has(label)) {\n        return label;\n      }\n    }\n\n    // Check synonyms\n    for (const [main, synonyms] of ingredientSynonyms.entries()) {\n      if (synonyms.includes(label)) {\n        return main;\n      }\n    }\n\n    return null;\n  };\n\n  const analyzeImageWithGoogleVision = async (imageFile: File) => {\n    const apiKey = process.env.REACT_APP_GOOGLE_CLOUD_API_KEY;\n    if (!apiKey) {\n      throw new Error('Google Cloud API key not found');\n    }\n\n    try {\n      // Convert file to base64\n      const base64Image = await new Promise<string>((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          if (typeof reader.result === 'string') {\n            resolve(reader.result.split(',')[1]);\n          }\n        };\n        reader.onerror = reject;\n        reader.readAsDataURL(imageFile);\n      });\n\n      const requestBody = {\n        requests: [{\n          image: {\n            content: base64Image\n          },\n          features: [\n            { type: 'LABEL_DETECTION', maxResults: 20 },\n            { type: 'OBJECT_LOCALIZATION', maxResults: 20 }\n          ]\n        }]\n      };\n\n      const response = await fetch(\n        `https://vision.googleapis.com/v1/images:annotate?key=${apiKey}`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(requestBody)\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`Google Vision API Error: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      const detectedItems = new Set<string>();\n      const debugLabels: string[] = [];  // For debugging\n\n      // Process labels\n      data.responses[0].labelAnnotations?.forEach((label: { description: string, score: number }) => {\n        debugLabels.push(`Label: ${label.description} (${label.score})`);\n        const matchedIngredient = findMatchingIngredient(label.description);\n        if (matchedIngredient && label.score > 0.7) {\n          detectedItems.add(matchedIngredient);\n        }\n      });\n\n      // Process objects\n      data.responses[0].localizedObjectAnnotations?.forEach((obj: { name: string, score: number }) => {\n        debugLabels.push(`Object: ${obj.name} (${obj.score})`);\n        const matchedIngredient = findMatchingIngredient(obj.name);\n        if (matchedIngredient && obj.score > 0.7) {\n          detectedItems.add(matchedIngredient);\n        }\n      });\n\n      // Update debug info\n      setDebugInfo(debugLabels);\n\n      return Array.from(detectedItems);\n\n    } catch (error) {\n      console.error('Error analyzing image:', error);\n      throw error;\n    }\n  };\n\n  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    setProcessing(true);\n    try {\n      const detectedIngredients = await analyzeImageWithGoogleVision(file);\n      console.log('Detected labels:', debugInfo);  // For debugging\n      onIngredientsDetected(detectedIngredients);\n    } catch (error) {\n      console.error('Error processing image:', error);\n      alert('Error processing image. Please try again.');\n    } finally {\n      setProcessing(false);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n\n  return (\n    <div className=\"w-full space-y-4\">\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        capture=\"environment\"\n        onChange={handleFileUpload}\n        className=\"hidden\"\n        id=\"camera-input\"\n      />\n      \n      <div className=\"flex gap-2\">\n        <label\n          htmlFor=\"camera-input\"\n          className=\"flex-1 flex items-center justify-center p-3 rounded-lg space-x-2 transition-all hover:scale-105 cursor-pointer\"\n          style={{ backgroundColor: '#B7B7A4' }}\n        >\n          <Camera className=\"w-6 h-6\" />\n          <span>Take Photo</span>\n        </label>\n\n        <label\n          htmlFor=\"camera-input\"\n          className=\"flex-1 flex items-center justify-center p-3 rounded-lg space-x-2 transition-all hover:scale-105 cursor-pointer\"\n          style={{ backgroundColor: '#B7B7A4' }}\n          onClick={() => {\n            if (fileInputRef.current) {\n              fileInputRef.current.removeAttribute('capture');\n              fileInputRef.current.click();\n              fileInputRef.current.setAttribute('capture', 'environment');\n            }\n          }}\n        >\n          <Upload className=\"w-6 h-6\" />\n          <span>Upload Photo</span>\n        </label>\n      </div>\n\n      {processing && (\n        <div className=\"mt-4 flex items-center justify-center space-x-2 p-4 rounded-lg\" \n             style={{ backgroundColor: '#FFE8D6' }}>\n          <div className=\"w-4 h-4 rounded-full bg-gray-600 animate-pulse\"></div>\n          <div className=\"w-4 h-4 rounded-full bg-gray-600 animate-pulse delay-100\"></div>\n          <div className=\"w-4 h-4 rounded-full bg-gray-600 animate-pulse delay-200\"></div>\n          <span className=\"ml-2 text-gray-800\">Processing image...</span>\n        </div>\n      )}\n\n      {/* Debug info - remove in production */}\n      {debugInfo.length > 0 && (\n        <div className=\"mt-4 p-4 text-sm bg-gray-100 rounded-lg\">\n          <h4 className=\"font-bold mb-2\">Debug Info:</h4>\n          {debugInfo.map((info, index) => (\n            <div key={index}>{info}</div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CameraDetection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}