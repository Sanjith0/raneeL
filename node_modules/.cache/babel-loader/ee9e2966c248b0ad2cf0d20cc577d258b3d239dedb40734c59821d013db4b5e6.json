{"ast":null,"code":"var _jsxFileName = \"/Users/sanjith/ingrediate1/src/CameraDetection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Camera, Upload } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraDetection = ({\n  onIngredientsDetected\n}) => {\n  _s();\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const fileInputRef = useRef(null);\n  const knownIngredients = new Set(['orange', 'apple', 'banana', 'lemon', 'lime', 'tomato', 'onion', 'garlic', 'potato', 'carrot', 'beef', 'chicken', 'fish']);\n  const analyzeImageWithGoogleVision = async imageFile => {\n    const apiKey = process.env.REACT_APP_GOOGLE_CLOUD_API_KEY;\n\n    // Log API key existence (not the actual key)\n    console.log('API Key exists:', !!apiKey);\n    if (!apiKey) {\n      throw new Error('Google Cloud API key not found in environment variables');\n    }\n    try {\n      var _data$responses$0$lab, _data$responses$0$loc;\n      // Log file details\n      console.log('Processing file:', {\n        name: imageFile.name,\n        type: imageFile.type,\n        size: imageFile.size\n      });\n\n      // Convert file to base64\n      const base64Image = await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          if (typeof reader.result === 'string') {\n            resolve(reader.result.split(',')[1]);\n          }\n        };\n        reader.onerror = error => {\n          console.error('FileReader error:', error);\n          reject(error);\n        };\n        reader.readAsDataURL(imageFile);\n      });\n      console.log('Image converted to base64');\n      const requestBody = {\n        requests: [{\n          image: {\n            content: base64Image\n          },\n          features: [{\n            type: 'LABEL_DETECTION',\n            maxResults: 10\n          }, {\n            type: 'OBJECT_LOCALIZATION',\n            maxResults: 10\n          }]\n        }]\n      };\n      console.log('Sending request to Google Vision API...');\n      const response = await fetch(`https://vision.googleapis.com/v1/images:annotate?key=${apiKey}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      console.log('Response status:', response.status);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API Error Response:', errorText);\n        throw new Error(`API Error: ${response.status} - ${errorText}`);\n      }\n      const data = await response.json();\n      console.log('API Response:', data);\n      const detectedItems = new Set();\n\n      // Process labels\n      (_data$responses$0$lab = data.responses[0].labelAnnotations) === null || _data$responses$0$lab === void 0 ? void 0 : _data$responses$0$lab.forEach(label => {\n        const name = label.description.toLowerCase();\n        console.log(`Detected label: ${name} (score: ${label.score})`);\n        if (knownIngredients.has(name) && label.score > 0.7) {\n          detectedItems.add(name);\n        }\n      });\n\n      // Process objects\n      (_data$responses$0$loc = data.responses[0].localizedObjectAnnotations) === null || _data$responses$0$loc === void 0 ? void 0 : _data$responses$0$loc.forEach(obj => {\n        const name = obj.name.toLowerCase();\n        console.log(`Detected object: ${name} (score: ${obj.score})`);\n        if (knownIngredients.has(name) && obj.score > 0.7) {\n          detectedItems.add(name);\n        }\n      });\n      const detectedArray = Array.from(detectedItems);\n      console.log('Final detected ingredients:', detectedArray);\n      return detectedArray;\n    } catch (error) {\n      console.error('Detailed error:', error);\n      throw error;\n    }\n  };\n  const handleFileUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    setError(null);\n    if (!file) {\n      console.log('No file selected');\n      return;\n    }\n    setProcessing(true);\n    try {\n      const detectedIngredients = await analyzeImageWithGoogleVision(file);\n      onIngredientsDetected(detectedIngredients);\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\n      console.error('Error processing image:', errorMessage);\n      setError(errorMessage);\n    } finally {\n      setProcessing(false);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: fileInputRef,\n      type: \"file\",\n      accept: \"image/*\",\n      capture: \"environment\",\n      onChange: handleFileUpload,\n      className: \"hidden\",\n      id: \"camera-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"camera-input\",\n        className: \"flex-1 flex items-center justify-center p-3 rounded-lg space-x-2 transition-all hover:scale-105 cursor-pointer\",\n        style: {\n          backgroundColor: '#B7B7A4'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Camera, {\n          className: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Take Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"camera-input\",\n        className: \"flex-1 flex items-center justify-center p-3 rounded-lg space-x-2 transition-all hover:scale-105 cursor-pointer\",\n        style: {\n          backgroundColor: '#B7B7A4'\n        },\n        onClick: () => {\n          if (fileInputRef.current) {\n            fileInputRef.current.removeAttribute('capture');\n            fileInputRef.current.click();\n            fileInputRef.current.setAttribute('capture', 'environment');\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Upload, {\n          className: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Upload Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), processing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex items-center justify-center space-x-2 p-4 rounded-lg\",\n      style: {\n        backgroundColor: '#FFE8D6'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-4 h-4 rounded-full bg-gray-600 animate-pulse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-4 h-4 rounded-full bg-gray-600 animate-pulse delay-100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-4 h-4 rounded-full bg-gray-600 animate-pulse delay-200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2 text-gray-800\",\n        children: \"Processing image...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 bg-red-100 text-red-700 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold\",\n        children: \"Error Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm mt-2\",\n        children: \"Please check the console for more detailed error information.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraDetection, \"zUVrat78IZ+XZ9OWjL26jhRNIZg=\");\n_c = CameraDetection;\nexport default CameraDetection;\nvar _c;\n$RefreshReg$(_c, \"CameraDetection\");","map":{"version":3,"names":["React","useState","useRef","Camera","Upload","jsxDEV","_jsxDEV","CameraDetection","onIngredientsDetected","_s","processing","setProcessing","error","setError","fileInputRef","knownIngredients","Set","analyzeImageWithGoogleVision","imageFile","apiKey","process","env","REACT_APP_GOOGLE_CLOUD_API_KEY","console","log","Error","_data$responses$0$lab","_data$responses$0$loc","name","type","size","base64Image","Promise","resolve","reject","reader","FileReader","onload","result","split","onerror","readAsDataURL","requestBody","requests","image","content","features","maxResults","response","fetch","method","headers","body","JSON","stringify","status","ok","errorText","text","data","json","detectedItems","responses","labelAnnotations","forEach","label","description","toLowerCase","score","has","add","localizedObjectAnnotations","obj","detectedArray","Array","from","handleFileUpload","event","_event$target$files","file","target","files","detectedIngredients","errorMessage","message","current","value","className","children","ref","accept","capture","onChange","id","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","style","backgroundColor","onClick","removeAttribute","click","setAttribute","_c","$RefreshReg$"],"sources":["/Users/sanjith/ingrediate1/src/CameraDetection.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Camera, Upload } from 'lucide-react';\n\ninterface CameraDetectionProps {\n  onIngredientsDetected: (ingredients: string[]) => void;\n}\n\nconst CameraDetection: React.FC<CameraDetectionProps> = ({ onIngredientsDetected }) => {\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const knownIngredients = new Set([\n    'orange', 'apple', 'banana', 'lemon', 'lime', 'tomato', 'onion', \n    'garlic', 'potato', 'carrot', 'beef', 'chicken', 'fish'\n  ]);\n\n  const analyzeImageWithGoogleVision = async (imageFile: File) => {\n    const apiKey = process.env.REACT_APP_GOOGLE_CLOUD_API_KEY;\n    \n    // Log API key existence (not the actual key)\n    console.log('API Key exists:', !!apiKey);\n    \n    if (!apiKey) {\n      throw new Error('Google Cloud API key not found in environment variables');\n    }\n\n    try {\n      // Log file details\n      console.log('Processing file:', {\n        name: imageFile.name,\n        type: imageFile.type,\n        size: imageFile.size\n      });\n\n      // Convert file to base64\n      const base64Image = await new Promise<string>((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          if (typeof reader.result === 'string') {\n            resolve(reader.result.split(',')[1]);\n          }\n        };\n        reader.onerror = (error) => {\n          console.error('FileReader error:', error);\n          reject(error);\n        };\n        reader.readAsDataURL(imageFile);\n      });\n\n      console.log('Image converted to base64');\n\n      const requestBody = {\n        requests: [{\n          image: {\n            content: base64Image\n          },\n          features: [\n            { type: 'LABEL_DETECTION', maxResults: 10 },\n            { type: 'OBJECT_LOCALIZATION', maxResults: 10 }\n          ]\n        }]\n      };\n\n      console.log('Sending request to Google Vision API...');\n\n      const response = await fetch(\n        `https://vision.googleapis.com/v1/images:annotate?key=${apiKey}`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(requestBody)\n        }\n      );\n\n      console.log('Response status:', response.status);\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API Error Response:', errorText);\n        throw new Error(`API Error: ${response.status} - ${errorText}`);\n      }\n\n      const data = await response.json();\n      console.log('API Response:', data);\n\n      const detectedItems = new Set<string>();\n\n      // Process labels\n      data.responses[0].labelAnnotations?.forEach((label: { description: string, score: number }) => {\n        const name = label.description.toLowerCase();\n        console.log(`Detected label: ${name} (score: ${label.score})`);\n        if (knownIngredients.has(name) && label.score > 0.7) {\n          detectedItems.add(name);\n        }\n      });\n\n      // Process objects\n      data.responses[0].localizedObjectAnnotations?.forEach((obj: { name: string, score: number }) => {\n        const name = obj.name.toLowerCase();\n        console.log(`Detected object: ${name} (score: ${obj.score})`);\n        if (knownIngredients.has(name) && obj.score > 0.7) {\n          detectedItems.add(name);\n        }\n      });\n\n      const detectedArray = Array.from(detectedItems);\n      console.log('Final detected ingredients:', detectedArray);\n      return detectedArray;\n\n    } catch (error) {\n      console.error('Detailed error:', error);\n      throw error;\n    }\n  };\n\n  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    setError(null);\n    \n    if (!file) {\n      console.log('No file selected');\n      return;\n    }\n\n    setProcessing(true);\n    try {\n      const detectedIngredients = await analyzeImageWithGoogleVision(file);\n      onIngredientsDetected(detectedIngredients);\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\n      console.error('Error processing image:', errorMessage);\n      setError(errorMessage);\n    } finally {\n      setProcessing(false);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n\n  return (\n    <div className=\"w-full space-y-4\">\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        capture=\"environment\"\n        onChange={handleFileUpload}\n        className=\"hidden\"\n        id=\"camera-input\"\n      />\n      \n      <div className=\"flex gap-2\">\n        <label\n          htmlFor=\"camera-input\"\n          className=\"flex-1 flex items-center justify-center p-3 rounded-lg space-x-2 transition-all hover:scale-105 cursor-pointer\"\n          style={{ backgroundColor: '#B7B7A4' }}\n        >\n          <Camera className=\"w-6 h-6\" />\n          <span>Take Photo</span>\n        </label>\n\n        <label\n          htmlFor=\"camera-input\"\n          className=\"flex-1 flex items-center justify-center p-3 rounded-lg space-x-2 transition-all hover:scale-105 cursor-pointer\"\n          style={{ backgroundColor: '#B7B7A4' }}\n          onClick={() => {\n            if (fileInputRef.current) {\n              fileInputRef.current.removeAttribute('capture');\n              fileInputRef.current.click();\n              fileInputRef.current.setAttribute('capture', 'environment');\n            }\n          }}\n        >\n          <Upload className=\"w-6 h-6\" />\n          <span>Upload Photo</span>\n        </label>\n      </div>\n\n      {processing && (\n        <div className=\"mt-4 flex items-center justify-center space-x-2 p-4 rounded-lg\" \n             style={{ backgroundColor: '#FFE8D6' }}>\n          <div className=\"w-4 h-4 rounded-full bg-gray-600 animate-pulse\"></div>\n          <div className=\"w-4 h-4 rounded-full bg-gray-600 animate-pulse delay-100\"></div>\n          <div className=\"w-4 h-4 rounded-full bg-gray-600 animate-pulse delay-200\"></div>\n          <span className=\"ml-2 text-gray-800\">Processing image...</span>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"mt-4 p-4 bg-red-100 text-red-700 rounded-lg\">\n          <p className=\"font-bold\">Error Details:</p>\n          <p className=\"text-sm\">{error}</p>\n          <p className=\"text-sm mt-2\">\n            Please check the console for more detailed error information.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CameraDetection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}