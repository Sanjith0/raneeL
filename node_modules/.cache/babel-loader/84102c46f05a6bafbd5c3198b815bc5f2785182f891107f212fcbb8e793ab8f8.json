{"ast":null,"code":"var _jsxFileName = \"/Users/sanjith/Documents/GitHub/ranneL/src/SimplifiedScoreCircle.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimplifiedScoreCircle = ({\n  totalScore\n}) => {\n  // Get color based on score\n  const getScoreColor = score => {\n    if (score >= 600) return '#22c55e'; // green\n    if (score >= 400) return '#eab308'; // yellow\n    return '#ef4444'; // red\n  };\n\n  // Get label based on score\n  const getAreaLabel = score => {\n    if (score >= 600) return 'Valuable area';\n    if (score >= 400) return 'Developing area';\n    return 'Undeveloped area';\n  };\n\n  // Calculate circle gradient angles based on score distribution\n  const calculateGradient = score => {\n    const maxScore = 800; // Maximum possible score\n    const percentage = score / maxScore * 360; // Convert to degrees\n    return `conic-gradient(\n      ${getScoreColor(score)} ${percentage}deg,\n      #e5e7eb ${percentage}deg\n    )`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-48 h-48 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 rounded-full\",\n          style: {\n            background: calculateGradient(totalScore)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-2 bg-white rounded-full flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-5xl font-bold\",\n            style: {\n              color: getScoreColor(totalScore)\n            },\n            children: totalScore.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl font-bold px-4 py-2 rounded-lg transition-colors duration-300\",\n        style: {\n          color: getScoreColor(totalScore),\n          backgroundColor: `${getScoreColor(totalScore)}15`\n        },\n        children: getAreaLabel(totalScore)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = SimplifiedScoreCircle;\nexport default SimplifiedScoreCircle;\nvar _c;\n$RefreshReg$(_c, \"SimplifiedScoreCircle\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SimplifiedScoreCircle","totalScore","getScoreColor","score","getAreaLabel","calculateGradient","maxScore","percentage","className","children","style","background","fileName","_jsxFileName","lineNumber","columnNumber","color","toFixed","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/sanjith/Documents/GitHub/ranneL/src/SimplifiedScoreCircle.tsx"],"sourcesContent":["import React from 'react';\n\nconst SimplifiedScoreCircle = ({ totalScore }: { totalScore: number }) => {\n  // Get color based on score\n  const getScoreColor = (score: number) => {\n    if (score >= 600) return '#22c55e'; // green\n    if (score >= 400) return '#eab308'; // yellow\n    return '#ef4444'; // red\n  };\n\n  // Get label based on score\n  const getAreaLabel = (score: number) => {\n    if (score >= 600) return 'Valuable area';\n    if (score >= 400) return 'Developing area';\n    return 'Undeveloped area';\n  };\n\n  // Calculate circle gradient angles based on score distribution\n  const calculateGradient = (score: number) => {\n    const maxScore = 800; // Maximum possible score\n    const percentage = (score / maxScore) * 360; // Convert to degrees\n    return `conic-gradient(\n      ${getScoreColor(score)} ${percentage}deg,\n      #e5e7eb ${percentage}deg\n    )`;\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow p-6\">\n      <div className=\"flex flex-col items-center\">\n        {/* Circle with score */}\n        <div className=\"relative w-48 h-48 mb-4\">\n          {/* Background gradient circle */}\n          <div \n            className=\"absolute inset-0 rounded-full\"\n            style={{ \n              background: calculateGradient(totalScore),\n            }}\n          />\n          \n          {/* Score display */}\n          <div className=\"absolute inset-2 bg-white rounded-full flex items-center justify-center\">\n            <span \n              className=\"text-5xl font-bold\"\n              style={{ color: getScoreColor(totalScore) }}\n            >\n              {totalScore.toFixed(2)}\n            </span>\n          </div>\n        </div>\n\n        {/* Area label */}\n        <div \n          className=\"text-2xl font-bold px-4 py-2 rounded-lg transition-colors duration-300\"\n          style={{ \n            color: getScoreColor(totalScore),\n            backgroundColor: `${getScoreColor(totalScore)}15`,\n          }}\n        >\n          {getAreaLabel(totalScore)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SimplifiedScoreCircle;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC;AAAmC,CAAC,KAAK;EACxE;EACA,MAAMC,aAAa,GAAIC,KAAa,IAAK;IACvC,IAAIA,KAAK,IAAI,GAAG,EAAE,OAAO,SAAS,CAAC,CAAC;IACpC,IAAIA,KAAK,IAAI,GAAG,EAAE,OAAO,SAAS,CAAC,CAAC;IACpC,OAAO,SAAS,CAAC,CAAC;EACpB,CAAC;;EAED;EACA,MAAMC,YAAY,GAAID,KAAa,IAAK;IACtC,IAAIA,KAAK,IAAI,GAAG,EAAE,OAAO,eAAe;IACxC,IAAIA,KAAK,IAAI,GAAG,EAAE,OAAO,iBAAiB;IAC1C,OAAO,kBAAkB;EAC3B,CAAC;;EAED;EACA,MAAME,iBAAiB,GAAIF,KAAa,IAAK;IAC3C,MAAMG,QAAQ,GAAG,GAAG,CAAC,CAAC;IACtB,MAAMC,UAAU,GAAIJ,KAAK,GAAGG,QAAQ,GAAI,GAAG,CAAC,CAAC;IAC7C,OAAO;AACX,QAAQJ,aAAa,CAACC,KAAK,CAAC,IAAII,UAAU;AAC1C,gBAAgBA,UAAU;AAC1B,MAAM;EACJ,CAAC;EAED,oBACER,OAAA;IAAKS,SAAS,EAAC,gCAAgC;IAAAC,QAAA,eAC7CV,OAAA;MAAKS,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBAEzCV,OAAA;QAAKS,SAAS,EAAC,yBAAyB;QAAAC,QAAA,gBAEtCV,OAAA;UACES,SAAS,EAAC,+BAA+B;UACzCE,KAAK,EAAE;YACLC,UAAU,EAAEN,iBAAiB,CAACJ,UAAU;UAC1C;QAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGFhB,OAAA;UAAKS,SAAS,EAAC,yEAAyE;UAAAC,QAAA,eACtFV,OAAA;YACES,SAAS,EAAC,oBAAoB;YAC9BE,KAAK,EAAE;cAAEM,KAAK,EAAEd,aAAa,CAACD,UAAU;YAAE,CAAE;YAAAQ,QAAA,EAE3CR,UAAU,CAACgB,OAAO,CAAC,CAAC;UAAC;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNhB,OAAA;QACES,SAAS,EAAC,wEAAwE;QAClFE,KAAK,EAAE;UACLM,KAAK,EAAEd,aAAa,CAACD,UAAU,CAAC;UAChCiB,eAAe,EAAE,GAAGhB,aAAa,CAACD,UAAU,CAAC;QAC/C,CAAE;QAAAQ,QAAA,EAEDL,YAAY,CAACH,UAAU;MAAC;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACI,EAAA,GA9DInB,qBAAqB;AAgE3B,eAAeA,qBAAqB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}