{"ast":null,"code":"// Create this file as 'analysisUtils.js' in your project\nexport const calculateScores = placesData => {\n  let scores = {\n    environmental: {\n      score: 0,\n      details: {}\n    },\n    education: {\n      score: 0,\n      details: {}\n    },\n    poi: {\n      score: 0,\n      details: {}\n    },\n    sentiment: {\n      score: 0,\n      details: {}\n    },\n    market: {\n      score: 0,\n      details: {}\n    }\n  };\n\n  // Calculate POI score\n  const nearbyPlaces = placesData.nearbyPlaces;\n  const poiCategories = {\n    shopping: 0,\n    restaurant: 0,\n    school: 0,\n    park: 0,\n    transport: 0\n  };\n\n  // Count different types of places\n  nearbyPlaces.forEach(place => {\n    place.types.forEach(type => {\n      if (type.includes('shop') || type.includes('store')) poiCategories.shopping++;\n      if (type.includes('restaurant') || type.includes('food')) poiCategories.restaurant++;\n      if (type.includes('school')) poiCategories.school++;\n      if (type.includes('park')) poiCategories.park++;\n      if (type.includes('transit') || type.includes('transport')) poiCategories.transport++;\n    });\n  });\n\n  // Calculate POI score (out of 200)\n  scores.poi.score = Math.min(200, poiCategories.shopping * 10 + poiCategories.restaurant * 10 + poiCategories.school * 15 + poiCategories.park * 15 + poiCategories.transport * 10);\n  scores.poi.details = {\n    shoppingVenues: poiCategories.shopping,\n    restaurants: poiCategories.restaurant,\n    schools: poiCategories.school,\n    parks: poiCategories.park,\n    transportHubs: poiCategories.transport\n  };\n\n  // Calculate sentiment score based on place ratings\n  const averageRating = placesData.placeDetails.rating || 0;\n  const totalRatings = placesData.placeDetails.user_ratings_total || 0;\n  scores.sentiment.score = Math.min(200, Math.round(averageRating / 5 * 150 + Math.min(50, totalRatings / 10)));\n  scores.sentiment.details = {\n    averageRating: averageRating.toFixed(1),\n    totalReviews: totalRatings,\n    communityEngagement: totalRatings > 100 ? 'High' : totalRatings > 50 ? 'Medium' : 'Low'\n  };\n  return scores;\n};","map":{"version":3,"names":["calculateScores","placesData","scores","environmental","score","details","education","poi","sentiment","market","nearbyPlaces","poiCategories","shopping","restaurant","school","park","transport","forEach","place","types","type","includes","Math","min","shoppingVenues","restaurants","schools","parks","transportHubs","averageRating","placeDetails","rating","totalRatings","user_ratings_total","round","toFixed","totalReviews","communityEngagement"],"sources":["/Users/sanjith/ingrediate1/src/analysisUtils.js"],"sourcesContent":["// Create this file as 'analysisUtils.js' in your project\nexport const calculateScores = (placesData) => {\n    let scores = {\n      environmental: {\n        score: 0,\n        details: {}\n      },\n      education: {\n        score: 0,\n        details: {}\n      },\n      poi: {\n        score: 0,\n        details: {}\n      },\n      sentiment: {\n        score: 0,\n        details: {}\n      },\n      market: {\n        score: 0,\n        details: {}\n      }\n    };\n  \n    // Calculate POI score\n    const nearbyPlaces = placesData.nearbyPlaces;\n    const poiCategories = {\n      shopping: 0,\n      restaurant: 0,\n      school: 0,\n      park: 0,\n      transport: 0\n    };\n  \n    // Count different types of places\n    nearbyPlaces.forEach(place => {\n      place.types.forEach(type => {\n        if (type.includes('shop') || type.includes('store')) poiCategories.shopping++;\n        if (type.includes('restaurant') || type.includes('food')) poiCategories.restaurant++;\n        if (type.includes('school')) poiCategories.school++;\n        if (type.includes('park')) poiCategories.park++;\n        if (type.includes('transit') || type.includes('transport')) poiCategories.transport++;\n      });\n    });\n  \n    // Calculate POI score (out of 200)\n    scores.poi.score = Math.min(200, \n      (poiCategories.shopping * 10) +\n      (poiCategories.restaurant * 10) +\n      (poiCategories.school * 15) +\n      (poiCategories.park * 15) +\n      (poiCategories.transport * 10)\n    );\n  \n    scores.poi.details = {\n      shoppingVenues: poiCategories.shopping,\n      restaurants: poiCategories.restaurant,\n      schools: poiCategories.school,\n      parks: poiCategories.park,\n      transportHubs: poiCategories.transport\n    };\n  \n    // Calculate sentiment score based on place ratings\n    const averageRating = placesData.placeDetails.rating || 0;\n    const totalRatings = placesData.placeDetails.user_ratings_total || 0;\n    \n    scores.sentiment.score = Math.min(200, Math.round((averageRating / 5) * 150 + \n      Math.min(50, totalRatings / 10)));\n    \n    scores.sentiment.details = {\n      averageRating: averageRating.toFixed(1),\n      totalReviews: totalRatings,\n      communityEngagement: totalRatings > 100 ? 'High' : totalRatings > 50 ? 'Medium' : 'Low'\n    };\n  \n    return scores;\n  };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}