{"ast":null,"code":"var _jsxFileName = \"/Users/sanjith/ingrediate1/src/CameraDetection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Camera, Upload } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraDetection = ({\n  onIngredientsDetected\n}) => {\n  _s();\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [detectedLabels, setDetectedLabels] = useState([]);\n  const fileInputRef = useRef(null);\n\n  // Expanded ingredients list with categories\n  const knownIngredients = {\n    fruits: new Set(['orange', 'apple', 'banana', 'lemon', 'lime', 'grape', 'strawberry', 'blueberry', 'raspberry', 'mango', 'pineapple', 'pear']),\n    vegetables: new Set(['tomato', 'onion', 'garlic', 'lettuce', 'carrot', 'potato', 'cucumber', 'bell pepper', 'broccoli', 'spinach', 'celery', 'mushroom', 'zucchini', 'cabbage', 'cauliflower']),\n    proteins: new Set(['chicken', 'beef', 'pork', 'fish', 'salmon', 'tuna', 'shrimp', 'egg', 'tofu', 'meat', 'protein', 'poultry']),\n    pantry: new Set(['rice', 'pasta', 'bread', 'flour', 'sugar', 'salt', 'pepper', 'oil', 'vinegar', 'sauce', 'spice', 'herb', 'grain'])\n  };\n\n  // More comprehensive synonym mapping\n  const ingredientSynonyms = {\n    'orange': ['citrus', 'citrus fruit', 'mandarin', 'tangerine', 'clementine'],\n    'bell pepper': ['pepper', 'capsicum', 'sweet pepper'],\n    'onion': ['green onion', 'scallion', 'spring onion', 'red onion', 'white onion'],\n    'potato': ['potatoes', 'spud', 'sweet potato', 'yam'],\n    'tomato': ['tomatoes', 'cherry tomato', 'roma tomato'],\n    'carrot': ['carrots', 'baby carrot'],\n    'apple': ['green apple', 'red apple', 'fruit']\n  };\n  const findIngredient = label => {\n    label = label.toLowerCase();\n\n    // Check direct matches in all categories\n    for (const [category, ingredients] of Object.entries(knownIngredients)) {\n      if (ingredients.has(label)) {\n        return label;\n      }\n    }\n\n    // Check synonyms\n    for (const [mainIngredient, synonyms] of Object.entries(ingredientSynonyms)) {\n      if (synonyms.includes(label)) {\n        return mainIngredient;\n      }\n    }\n    return null;\n  };\n  const analyzeImageWithGoogleVision = async imageFile => {\n    const apiKey = process.env.REACT_APP_GOOGLE_CLOUD_API_KEY;\n    if (!apiKey) {\n      throw new Error('Google Cloud API key not found');\n    }\n    try {\n      var _data$responses$0$lab, _data$responses$0$loc;\n      const base64Image = await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          if (typeof reader.result === 'string') {\n            resolve(reader.result.split(',')[1]);\n          }\n        };\n        reader.onerror = reject;\n        reader.readAsDataURL(imageFile);\n      });\n      const requestBody = {\n        requests: [{\n          image: {\n            content: base64Image\n          },\n          features: [{\n            type: 'OBJECT_LOCALIZATION',\n            maxResults: 50 // Increased for multiple objects\n          }, {\n            type: 'LABEL_DETECTION',\n            maxResults: 50\n          }]\n        }]\n      };\n      const response = await fetch(`https://vision.googleapis.com/v1/images:annotate?key=${apiKey}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`API Error: ${response.status} - ${errorText}`);\n      }\n      const data = await response.json();\n      const detectedItems = new Set();\n      const allDetectedLabels = [];\n\n      // Process labels with special handling for fruits\n      (_data$responses$0$lab = data.responses[0].labelAnnotations) === null || _data$responses$0$lab === void 0 ? void 0 : _data$responses$0$lab.forEach(label => {\n        const name = label.description.toLowerCase();\n        allDetectedLabels.push(`${name} (${(label.score * 100).toFixed(1)}%)`);\n\n        // Special handling for fruits - lower threshold\n        if (knownIngredients.fruits.has(name) && label.score > 0.4) {\n          detectedItems.add(name);\n        } else if (label.score > 0.5) {\n          // Standard threshold for non-fruits\n          const ingredient = findIngredient(name);\n          if (ingredient) {\n            detectedItems.add(ingredient);\n          }\n        }\n      });\n\n      // Process objects with special handling for fruits\n      (_data$responses$0$loc = data.responses[0].localizedObjectAnnotations) === null || _data$responses$0$loc === void 0 ? void 0 : _data$responses$0$loc.forEach(obj => {\n        const name = obj.name.toLowerCase();\n        allDetectedLabels.push(`${name} (${(obj.score * 100).toFixed(1)}%)`);\n\n        // Special handling for fruits - lower threshold\n        if (knownIngredients.fruits.has(name) && obj.score > 0.4) {\n          detectedItems.add(name);\n        } else if (obj.score > 0.5) {\n          // Standard threshold for non-fruits\n          const ingredient = findIngredient(name);\n          if (ingredient) {\n            detectedItems.add(ingredient);\n          }\n        }\n      });\n\n      // Update detected labels for display\n      setDetectedLabels(allDetectedLabels);\n      console.log('Detected items:', Array.from(detectedItems)); // Debug log\n      return Array.from(detectedItems);\n    } catch (error) {\n      console.error('Error analyzing image:', error);\n      throw error;\n    }\n  };\n  const handleFileUpload = async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    setError(null);\n    setDetectedLabels([]);\n    if (!file) return;\n    setProcessing(true);\n    try {\n      const detectedIngredients = await analyzeImageWithGoogleVision(file);\n      onIngredientsDetected(detectedIngredients);\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\n      console.error('Error processing image:', errorMessage);\n      setError(errorMessage);\n    } finally {\n      setProcessing(false);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: fileInputRef,\n      type: \"file\",\n      accept: \"image/*\",\n      capture: \"environment\",\n      onChange: handleFileUpload,\n      className: \"hidden\",\n      id: \"camera-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"camera-input\",\n        className: \"flex-1 flex items-center justify-center p-3 rounded-lg space-x-2 transition-all hover:scale-105 cursor-pointer\",\n        style: {\n          backgroundColor: '#B7B7A4'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Camera, {\n          className: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Take Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"camera-input\",\n        className: \"flex-1 flex items-center justify-center p-3 rounded-lg space-x-2 transition-all hover:scale-105 cursor-pointer\",\n        style: {\n          backgroundColor: '#B7B7A4'\n        },\n        onClick: () => {\n          if (fileInputRef.current) {\n            fileInputRef.current.removeAttribute('capture');\n            fileInputRef.current.click();\n            fileInputRef.current.setAttribute('capture', 'environment');\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Upload, {\n          className: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Upload Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), processing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex items-center justify-center space-x-2 p-4 rounded-lg\",\n      style: {\n        backgroundColor: '#FFE8D6'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-4 h-4 rounded-full bg-gray-600 animate-pulse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-4 h-4 rounded-full bg-gray-600 animate-pulse delay-100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-4 h-4 rounded-full bg-gray-600 animate-pulse delay-200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2 text-gray-800\",\n        children: \"Processing image...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 bg-red-100 text-red-700 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold\",\n        children: \"Error Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(CameraDetection, \"/FCdgKmMiTBpVQqJiocOzo2bPXM=\");\n_c = CameraDetection;\nexport default CameraDetection;\nvar _c;\n$RefreshReg$(_c, \"CameraDetection\");","map":{"version":3,"names":["React","useState","useRef","Camera","Upload","jsxDEV","_jsxDEV","CameraDetection","onIngredientsDetected","_s","processing","setProcessing","error","setError","detectedLabels","setDetectedLabels","fileInputRef","knownIngredients","fruits","Set","vegetables","proteins","pantry","ingredientSynonyms","findIngredient","label","toLowerCase","category","ingredients","Object","entries","has","mainIngredient","synonyms","includes","analyzeImageWithGoogleVision","imageFile","apiKey","process","env","REACT_APP_GOOGLE_CLOUD_API_KEY","Error","_data$responses$0$lab","_data$responses$0$loc","base64Image","Promise","resolve","reject","reader","FileReader","onload","result","split","onerror","readAsDataURL","requestBody","requests","image","content","features","type","maxResults","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","status","data","json","detectedItems","allDetectedLabels","responses","labelAnnotations","forEach","name","description","push","score","toFixed","add","ingredient","localizedObjectAnnotations","obj","console","log","Array","from","handleFileUpload","event","_event$target$files","file","target","files","detectedIngredients","errorMessage","message","current","value","className","children","ref","accept","capture","onChange","id","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","style","backgroundColor","onClick","removeAttribute","click","setAttribute","_c","$RefreshReg$"],"sources":["/Users/sanjith/ingrediate1/src/CameraDetection.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Camera, Upload } from 'lucide-react';\n\ninterface CameraDetectionProps {\n  onIngredientsDetected: (ingredients: string[]) => void;\n}\n\nconst CameraDetection: React.FC<CameraDetectionProps> = ({ onIngredientsDetected }) => {\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [detectedLabels, setDetectedLabels] = useState<string[]>([]);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // Expanded ingredients list with categories\n  const knownIngredients = {\n    fruits: new Set([\n      'orange', 'apple', 'banana', 'lemon', 'lime', 'grape', 'strawberry',\n      'blueberry', 'raspberry', 'mango', 'pineapple', 'pear'\n    ]),\n    vegetables: new Set([\n      'tomato', 'onion', 'garlic', 'lettuce', 'carrot', 'potato', 'cucumber',\n      'bell pepper', 'broccoli', 'spinach', 'celery', 'mushroom', 'zucchini', 'cabbage', 'cauliflower'\n    ]),\n    proteins: new Set([\n      'chicken', 'beef', 'pork', 'fish', 'salmon', 'tuna', 'shrimp', 'egg',\n      'tofu', 'meat', 'protein', 'poultry'\n    ]),\n    pantry: new Set([\n      'rice', 'pasta', 'bread', 'flour', 'sugar', 'salt', 'pepper', 'oil',\n      'vinegar', 'sauce', 'spice', 'herb', 'grain'\n    ])\n  };\n\n  // More comprehensive synonym mapping\n  const ingredientSynonyms = {\n    'orange': ['citrus', 'citrus fruit', 'mandarin', 'tangerine', 'clementine'],\n    'bell pepper': ['pepper', 'capsicum', 'sweet pepper'],\n    'onion': ['green onion', 'scallion', 'spring onion', 'red onion', 'white onion'],\n    'potato': ['potatoes', 'spud', 'sweet potato', 'yam'],\n    'tomato': ['tomatoes', 'cherry tomato', 'roma tomato'],\n    'carrot': ['carrots', 'baby carrot'],\n    'apple': ['green apple', 'red apple', 'fruit']\n  };\n\n  const findIngredient = (label: string): string | null => {\n    label = label.toLowerCase();\n    \n    // Check direct matches in all categories\n    for (const [category, ingredients] of Object.entries(knownIngredients)) {\n      if (ingredients.has(label)) {\n        return label;\n      }\n    }\n\n    // Check synonyms\n    for (const [mainIngredient, synonyms] of Object.entries(ingredientSynonyms)) {\n      if (synonyms.includes(label)) {\n        return mainIngredient;\n      }\n    }\n\n    return null;\n  };\n\n  const analyzeImageWithGoogleVision = async (imageFile: File) => {\n    const apiKey = process.env.REACT_APP_GOOGLE_CLOUD_API_KEY;\n    if (!apiKey) {\n      throw new Error('Google Cloud API key not found');\n    }\n\n    try {\n      const base64Image = await new Promise<string>((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          if (typeof reader.result === 'string') {\n            resolve(reader.result.split(',')[1]);\n          }\n        };\n        reader.onerror = reject;\n        reader.readAsDataURL(imageFile);\n      });\n\n      const requestBody = {\n        requests: [{\n          image: { content: base64Image },\n          features: [\n            { \n              type: 'OBJECT_LOCALIZATION', \n              maxResults: 50  // Increased for multiple objects\n            },\n            { \n              type: 'LABEL_DETECTION', \n              maxResults: 50\n            }\n          ]\n        }]\n      };\n\n      const response = await fetch(\n        `https://vision.googleapis.com/v1/images:annotate?key=${apiKey}`,\n        {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(requestBody)\n        }\n      );\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`API Error: ${response.status} - ${errorText}`);\n      }\n\n      const data = await response.json();\n      const detectedItems = new Set<string>();\n      const allDetectedLabels: string[] = [];\n\n      // Process labels with special handling for fruits\n      data.responses[0].labelAnnotations?.forEach((label: { description: string, score: number }) => {\n        const name = label.description.toLowerCase();\n        allDetectedLabels.push(`${name} (${(label.score * 100).toFixed(1)}%)`);\n        \n        // Special handling for fruits - lower threshold\n        if (knownIngredients.fruits.has(name) && label.score > 0.4) {\n          detectedItems.add(name);\n        } else if (label.score > 0.5) { // Standard threshold for non-fruits\n          const ingredient = findIngredient(name);\n          if (ingredient) {\n            detectedItems.add(ingredient);\n          }\n        }\n      });\n\n      // Process objects with special handling for fruits\n      data.responses[0].localizedObjectAnnotations?.forEach((obj: { name: string, score: number }) => {\n        const name = obj.name.toLowerCase();\n        allDetectedLabels.push(`${name} (${(obj.score * 100).toFixed(1)}%)`);\n        \n        // Special handling for fruits - lower threshold\n        if (knownIngredients.fruits.has(name) && obj.score > 0.4) {\n          detectedItems.add(name);\n        } else if (obj.score > 0.5) { // Standard threshold for non-fruits\n          const ingredient = findIngredient(name);\n          if (ingredient) {\n            detectedItems.add(ingredient);\n          }\n        }\n      });\n\n      // Update detected labels for display\n      setDetectedLabels(allDetectedLabels);\n\n      console.log('Detected items:', Array.from(detectedItems)); // Debug log\n      return Array.from(detectedItems);\n\n    } catch (error) {\n      console.error('Error analyzing image:', error);\n      throw error;\n    }\n};\n\n  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    setError(null);\n    setDetectedLabels([]);\n    \n    if (!file) return;\n\n    setProcessing(true);\n    try {\n      const detectedIngredients = await analyzeImageWithGoogleVision(file);\n      onIngredientsDetected(detectedIngredients);\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\n      console.error('Error processing image:', errorMessage);\n      setError(errorMessage);\n    } finally {\n      setProcessing(false);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n\n  return (\n    <div className=\"w-full space-y-4\">\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        capture=\"environment\"\n        onChange={handleFileUpload}\n        className=\"hidden\"\n        id=\"camera-input\"\n      />\n      \n      <div className=\"flex gap-2\">\n        <label\n          htmlFor=\"camera-input\"\n          className=\"flex-1 flex items-center justify-center p-3 rounded-lg space-x-2 transition-all hover:scale-105 cursor-pointer\"\n          style={{ backgroundColor: '#B7B7A4' }}\n        >\n          <Camera className=\"w-6 h-6\" />\n          <span>Take Photo</span>\n        </label>\n\n        <label\n          htmlFor=\"camera-input\"\n          className=\"flex-1 flex items-center justify-center p-3 rounded-lg space-x-2 transition-all hover:scale-105 cursor-pointer\"\n          style={{ backgroundColor: '#B7B7A4' }}\n          onClick={() => {\n            if (fileInputRef.current) {\n              fileInputRef.current.removeAttribute('capture');\n              fileInputRef.current.click();\n              fileInputRef.current.setAttribute('capture', 'environment');\n            }\n          }}\n        >\n          <Upload className=\"w-6 h-6\" />\n          <span>Upload Photo</span>\n        </label>\n      </div>\n\n      {processing && (\n        <div className=\"mt-4 flex items-center justify-center space-x-2 p-4 rounded-lg\" \n             style={{ backgroundColor: '#FFE8D6' }}>\n          <div className=\"w-4 h-4 rounded-full bg-gray-600 animate-pulse\"></div>\n          <div className=\"w-4 h-4 rounded-full bg-gray-600 animate-pulse delay-100\"></div>\n          <div className=\"w-4 h-4 rounded-full bg-gray-600 animate-pulse delay-200\"></div>\n          <span className=\"ml-2 text-gray-800\">Processing image...</span>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"mt-4 p-4 bg-red-100 text-red-700 rounded-lg\">\n          <p className=\"font-bold\">Error Details:</p>\n          <p className=\"text-sm\">{error}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CameraDetection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}